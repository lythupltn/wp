<?php
/**
 *
 * @link       laserwp.com/contact
 * @since      1.0.0
 * @package    core
 * @subpackage core/
 * @author     Laser WordPress Team <contact@laserwp.com>
 */

namespace Lwwb\Admin\Library;

use Lwwb\Admin\Base\Base_Admin_Controller;
use Lwwb\Customizer\External_Post_Meta_Settings;
use Lwwb\Customizer\Post_Meta_Settings;

class Library_Controller extends Base_Admin_Controller {
	public $settings;
	public $callbacks;
	public $page = array();
	private $page_id;

	public function register() {
		parent::register(); // TODO: Change the autogenerated stub
		$this->page_id = $this->plugin_prefix . '_library';

		// Print template library tabs.
		add_filter( 'views_edit-' . $this->page_id, array( $this, 'print_tabs' ) );
		add_filter( 'init', array( $this, 'create_term_library' ) );

		add_filter( 'quick_edit_show_taxonomy', array( $this, 'hide_tags_from_quick_edit' ), 10, 3 );
		add_action( 'manage_posts_extra_tablenav', array( $this, 'render_page_blank' ) );
		add_action( 'edit_form_after_title', array( $this, 'switch_mode_button' ) );

		add_filter( 'post_row_actions', array( $this, 'posts_table_row_add_actions' ), 10, 2 );
		add_filter( 'page_row_actions', array( $this, 'posts_table_row_add_actions' ), 10, 2 );

		add_action( 'admin_footer', array( $this, 'print_admin_js_template' ) );
		add_filter( 'customize_save_response', array(
			$this,
			'save_response_to_cpt'
		), 10, 2 );

		add_action( 'admin_url', array( $this, 'change_url_addnew_template' ), 10, 2 );
	}


	public function change_url_addnew_template( $url, $path ) {
		if ( $path === 'post-new.php?post_type=lwwb_library' ) {
			$lib_type_url = isset( $_REQUEST['lwwb_library_type'] ) ? $_REQUEST['lwwb_library_type'] : 'page';
			$url          = esc_url( admin_url() . 'post-new.php?post_type=lwwb_library&lwwb_library_type=' . $lib_type_url ); // or any other url
		}

		return $url;
	}


	public function get_page() {
		if ( ! $this->is_current_user_in_editing() || 'administrator' === wp_get_current_user()->roles[0] ) {
			return;
		}

		return array(
			'page_title' => esc_html__( 'Laser', 'lwwb' ),
			'menu_title' => esc_html__( 'Laser', 'lwwb' ),
			'capability' => $this->capability,
			'menu_slug'  => $this->plugin_prefix,
			'callback'   => array( $this, 'admin_dashboard' ),
			'icon_url'   => $this->plugin_url . 'assets/admin/dashboard/admin.png',
			'position'   => 110
		);
	}

	public function get_sub_page() {
		if ( ! $this->is_current_user_in_editing() ) {
			return;
		}

		return array(
			'parent_slug' => $this->plugin_prefix,
			'page_title'  => esc_html__( 'Library', 'lwwb' ),
			'menu_title'  => esc_html__( 'Library', 'lwwb' ),
			'capability'  => $this->capability,
			'menu_slug'   => 'edit.php?post_type=' . $this->page_id,
			'callback'    => ''
		);
	}

	/**
	 * Hide tags from quick edit if user does not have admin priviledges
	 */
	public function hide_tags_from_quick_edit( $show_in_quick_edit, $taxonomy_name, $post_type ) {
		if ( 'lwwb_library_type' === $taxonomy_name && $post_type == 'lwwb_library' ) {
			return false;
		} else {
			return $show_in_quick_edit;
		}
	}


	public function print_tabs( $views ) {
		$current_type = '';
		$active_class = ' nav-tab-active';
		if ( ! empty( $_REQUEST['post_type'] && isset( $_REQUEST['lwwb_library_type'] ) ) ) {
			$current_type = $_REQUEST['lwwb_library_type'];
			$active_class = '';
		}
		$baseurl        = admin_url( 'edit.php?post_type=' . $this->page_id );
//		$template_types = array( 'section', 'page', 'header', 'footer' );
		$template_types = array( 'header', 'footer' );
		?>
        <div id="lwwb-template-library-tabs-wrapper" class="nav-tab-wrapper">
            <a class="nav-tab<?php echo $active_class; ?>"
               href="<?php echo esc_url( $baseurl ); ?>"><?php echo __( 'All', 'lwwb' ); ?></a>
			<?php
			foreach ( $template_types as $template_type ) :
				$active_class = '';
				if ( $current_type === $template_type ) {
					$active_class = ' nav-tab-active';
				}
				$type_url   = add_query_arg( 'lwwb_library_type', $template_type, $baseurl );
				$type_label = ucwords( str_replace( [ '_', '-' ], ' ', $template_type ) );
				if ( 'Page' == $type_label ) {
					$type_label = esc_html__( 'Pages', 'lwwb' );
				}
				echo "<a class='nav-tab{$active_class}' href='{$type_url}'>{$type_label}</a>";
			endforeach;
			?>
        </div>
		<?php
		return $views;
	}

	public function create_term_library() {
		wp_insert_term(
			'section', // the term
			'lwwb_library_type', // the taxonomy
			array(
				'slug' => 'section',
			)
		);
		wp_insert_term(
			'page', // the term
			'lwwb_library_type', // the taxonomy
			array(
				'slug' => 'page',
			)
		);
		wp_insert_term(
			'header', // the term
			'lwwb_library_type', // the taxonomy
			array(
				'slug' => 'header',
			)
		);
		wp_insert_term(
			'footer', // the term
			'lwwb_library_type', // the taxonomy
			array(
				'slug' => 'footer',
			)
		);
	}


	public function render_page_blank() {
		global $post_type;

		if ( 'lwwb_library' !== $post_type ) {
			return;
		}

		global $wp_list_table;
		$total_items = $wp_list_table->get_pagination_arg( 'total_items' );
		if ( ! empty( $total_items ) || ! empty( $_REQUEST['s'] ) ) {
			return;
		}
		$inline_style       = '#posts-filter .wp-list-table, #posts-filter .tablenav.top, .tablenav.bottom .actions, .wrap .subsubsub { display:none;}';
		$library_type       = isset( $_REQUEST['lwwb_library_type'] ) ? $_REQUEST['lwwb_library_type'] : esc_html__( 'New Template', 'lwwb' );
		$lib_type_url       = isset( $_REQUEST['lwwb_library_type'] ) ? $_REQUEST['lwwb_library_type'] : 'page';
		$library_type_label = ucwords( $library_type );
		?>
        <style type="text/css"><?php echo $inline_style; ?></style>
        <div class="lwwb-template-library">
            <div class="lwwb-blank-page-library">
                <img width="120"
                     src="<?php echo esc_url( $this->plugin_url . 'assets/admin/dashboard/logoforweb.png' ); ?>" alt="">
                <h2>
					<?php
					/* translators: %s: Template type label. */
					printf( __( 'Create Your First %s', 'lwwb' ), $library_type_label );
					?>
                </h2>
                <p><?php echo __( 'Add templates and reuse them across your website.', 'lwwb' ); ?></p>
                <a class="lwwb-library-addnew" href="<?php
				echo esc_url( admin_url() . 'post-new.php?post_type=lwwb_library&lwwb_library_type=' . $lib_type_url )
				?>">
					<?php
					/* translators: %s: Template type label. */
					printf( __( 'Add New %s', 'lwwb' ), $library_type_label );
					?>
                </a>

            </div>
        </div>
		<?php
	}

	public function switch_mode_button( $post ) {
		$url_post = $this->get_url_customizer_post( $post );
		$post_id  = isset( $_REQUEST['post'] ) ? $_REQUEST['post'] : '';
		if ( $url_post == '' ) {
			return;
		}
		?>
        <div id="lwwb-editor">
            <a id="lwwb-go-to-edit-page-link"
               href="<?php echo esc_url(
				   admin_url() . 'customize.php?url=' . urlencode( $url_post )
			   ); ?>">
                <div id="<?php if ( ! $post_id ): echo 'lwwb-editor-button'; else: echo 'lwwb-editor'; endif; ?>"
                     class="button btn-lwwb-edit ">
					<?php echo __( 'Edit with LWWB', 'lwwb' ); ?>
                </div>
            </a>
        </div>
		<?php
	}

	public function print_admin_js_template() {
		global $post;

		if ( ! isset( $post ) ) {
			return;
		}
		if ( ! has_action( 'enqueue_block_editor_assets' ) ) {
			return;
		}
		$url_post = $this->get_url_customizer_post( $post );

		if ( $url_post == '' ) {
			return;
		}
		$post_id = isset( $_REQUEST['post'] ) ? $_REQUEST['post'] : '';
		?>
        <script id="lwwb-gutenberg-button-switch-mode" type="text/html">
            <div id="lwwb-editor">
                <a id="lwwb-go-to-edit-page-link"
                   href="<?php echo esc_url(
					   admin_url() . 'customize.php?url=' . urlencode( $url_post )
				   ); ?>">
                    <div id="<?php if ( ! $post_id ): echo 'lwwb-editor-button'; else: echo 'lwwb-edit-editor'; endif; ?>"
                         class="button btn-lwwb-edit ">
						<?php echo __( 'Edit with LWWB', 'lwwb' ); ?>
                    </div>
                </a>
            </div>
        </script>
		<?php
	}

	public function posts_table_row_add_actions( $actions, $post ) {
		$url_post = $this->get_url_customizer_post( $post );

		if ( $url_post == '' ) {
			return $actions;
		}
		$actions['lwwb_editor'] = '<a href="' . esc_url( admin_url() . 'customize.php?url=' . urlencode( $url_post ) ) . '">' . __( 'Edit with Laser WordPress Website Builder', 'lwwb' ) . '</a>';

		return $actions;
	}

	public function get_url_customizer_post( $post ) {
		$object_type = array();
		$options     = get_option( 'lwwb_settings' );
		if ( isset( $options['settings'] ) && ! empty( $options['settings'] ) ) {
			foreach ( $options['settings'] as $item ) {
				$object_type[] = $item;
			}
		}
		if ( ! $this->is_current_user_in_editing() ) {
			return;
		}

		if ( ! in_array( $post->post_type, $object_type ) ) {
			return;
		}
		wp_nonce_field( basename( __FILE__ ), '_lwwb_edit_mode_nonce' );
		$url_post = get_the_permalink( $post->ID );

		$tax = isset( $_REQUEST['lwwb_library_type'] )
			? $_REQUEST['lwwb_library_type'] : '';

		$terms = get_the_terms( $post->ID, 'lwwb_library_type' );
		if ( $terms ) {
			$tax = $terms[0]->name;
		}
		if ( $tax != '' ) {
			$url_post = $url_post . '&lwwb_library_type=' . $tax;
		}

		return $url_post;

	}

	public function save_response_to_cpt( $response ) {

		$has_invalidities         = (
			isset( $response['setting_validities'] )
			&&
			count( array_filter( $response['setting_validities'], 'is_array' ) ) > 0
		);
		$changeset_status_publish = (
			empty( $response['changeset_status'] ) // Prior to 4.7, this filter only would run on actual saves.
			||
			'publish' === $response['changeset_status']
		);

		// Short circuit if there there were invalidities or the changeset status was not publish.
		if ( $has_invalidities || ! $changeset_status_publish ) {
			return $response;
		}

		// Get lwwb_library_type
		parse_str( parse_url( $_SERVER['HTTP_REFERER'], PHP_URL_QUERY ), $queries );
		$query     = parse_url( $queries['url'] );
		$arg_query = explode( '&', $query['query'] );
		foreach ( $arg_query as $item ) {
			$taxs = explode( '=', $item );
			if ( 'lwwb_library_type' != $taxs[0] ) {
				continue;
			}
			$this->tax = $taxs[1];
		}
		$response['tax'] = $this->tax;

		$setting_id = array_keys( $response['setting_validities'] );

		$postID = Post_Meta_Settings::parse_setting_id( $setting_id[ count( $setting_id ) - 1 ] );
		$post   = get_post( $postID['page_setting_id'] );

		$response['url'] = admin_url() . 'post.php?post=' . $postID['page_setting_id'] . '&action=edit&lwwb_library_type=' . $this->tax;

		if ( 'publish' === $post->post_status ) {
			return $response;
		}
		$terms = get_terms( array(
			'taxonomy'   => 'lwwb_library_type',
			'hide_empty' => false,
		) );
		foreach ( $terms as $term ) {
			$term_name          = $term->name;
			$response['term'][] = $term_name;
			if ( $this->tax === $term_name ) {
				$response['term_id'] = $term->term_id;
			}

		}

		wp_update_post( array(
			'ID'             => $postID['page_setting_id'],
			'post_name'      => $postID['page_setting_id'],
			'post_status'    => 'publish',
			'comment_status' => 'closed',
			'ping_status'    => 'closed',
			'post_title'     => sprintf( esc_html__( '( no title _ #LWWB %d )', 'lwwb' ), $postID['page_setting_id'] ),
			'post_type'      => $post->post_type
		) );
		wp_set_post_terms( $postID['page_setting_id'], $response['term_id'], 'lwwb_library_type' );

		/**
		 * $postID['post_id']   postID
		 * $postID['meta_key']  lwwb_elmn_key
		 */
		return $response;
	}

}
